name: CI

on:
  push:
    branches:
      - main
      - docker-image
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  #
  # run tests#
  #
  test:
    name: Run tests and linter
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --ignore=F824 --show-source --statistics 
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest

  #
  # build docker image and push dev
  #
  build-and-push:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [test]
    name: Build image & push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Extract version from __version__.py
      - name: Extract version
        run: |
          VERSION=$(python -c "exec(open('__version__.py').read()); print(__version__)")
          echo "Version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          # Convert repository name to lowercase
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${REPO_NAME}:dev .

      # Step 5: Push the Docker image to GHCR
      - name: Push Docker image
        run: |
          # Use lowercase repository name for pushing
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/${REPO_NAME}:dev
